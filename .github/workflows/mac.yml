name: CMake-Mac

on: [pull_request,push]

jobs:
  macos:
    runs-on: macos-${{ matrix.macos_version }}
    name: macos-${{ matrix.macos_version }}-Qt-${{ matrix.qt_version }}-shared-${{ matrix.shared }}
    strategy:
      fail-fast: false
      matrix:
        macos_version: [latest]
        qt_version: [6.5.*]
        shared: [ON]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
            version: ${{ matrix.qt_version }}
            cache: 'true'
            cache-key-prefix: ${{ runner.os }}-Qt-Cache-${{ matrix.qt_version }}
            dir: ${{ github.workspace }}/Qt
            host: 'mac'
            arch: 'clang_64'

      - name: Configure CMake
        run: cmake -DBUILD_SHARED_LIBS=${{ matrix.shared }} -DBUILD_EXAMPLES=OFF -DCMAKE_BUILD_TYPE=Release -B "${{github.workspace}}/build"

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config Release

      - name: Create macOS app bundle
        run: |
          # Debug: Show what was built
          echo "=== Build output contents ==="
          find build -name "convertrt*" -type f 2>/dev/null || echo "No convertrt files found"
          find build -name "*.app" -type d 2>/dev/null || echo "No .app directories found"
          ls -la build/ || echo "build directory not found"
          ls -la build/bin/ 2>/dev/null || echo "build/bin directory not found"
          
          # Create app bundle structure
          mkdir -p deploy/ConvertRT.app/Contents/{MacOS,Resources,Frameworks}
          
          # Find and copy the executable - check all possible locations
          if [ -f "build/bin/convertrt.app/Contents/MacOS/convertrt" ]; then
            echo "Found app bundle executable"
            cp build/bin/convertrt.app/Contents/MacOS/convertrt deploy/ConvertRT.app/Contents/MacOS/ConvertRT
          elif [ -f "build/convertrt.app/Contents/MacOS/convertrt" ]; then
            echo "Found app bundle executable in build root"
            cp build/convertrt.app/Contents/MacOS/convertrt deploy/ConvertRT.app/Contents/MacOS/ConvertRT
          elif [ -f "build/convertrt" ]; then
            echo "Found standalone executable in build root"
            cp build/convertrt deploy/ConvertRT.app/Contents/MacOS/ConvertRT
          elif [ -f "build/bin/convertrt" ]; then
            echo "Found standalone executable in build/bin"
            cp build/bin/convertrt deploy/ConvertRT.app/Contents/MacOS/ConvertRT
          else
            echo "Error: convertrt executable not found in any expected location"
            echo "Available files in build:"
            find build -type f -name "*convertrt*" 2>/dev/null || echo "No convertrt files found"
            exit 1
          fi
          
          # Make executable
          chmod +x deploy/ConvertRT.app/Contents/MacOS/ConvertRT
          
          # Copy config file if it exists
          if [ -f "config.ini" ]; then
            echo "Copying config.ini to app bundle"
            cp config.ini deploy/ConvertRT.app/Contents/Resources/
          else
            echo "Warning: config.ini not found, creating default"
            cat > deploy/ConvertRT.app/Contents/Resources/config.ini << 'CONFIGEOF'
          [oss]
          sts_url=https://your-api-endpoint.com/system/oss/getSts
          oss_upload_url=https://your-bucket.oss-region.aliyuncs.com
          oss_base_url=https://your-bucket.oss-region.aliyuncs.com
          CONFIGEOF
          fi
          
          # Create Info.plist
          cat > deploy/ConvertRT.app/Contents/Info.plist << 'PLISTEOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>CFBundleExecutable</key>
              <string>ConvertRT</string>
              <key>CFBundleIdentifier</key>
              <string>com.convertrt.app</string>
              <key>CFBundleName</key>
              <string>ConvertRT</string>
              <key>CFBundleDisplayName</key>
              <string>ConvertRT</string>
              <key>CFBundleVersion</key>
              <string>1.0</string>
              <key>CFBundleShortVersionString</key>
              <string>1.0</string>
              <key>CFBundlePackageType</key>
              <string>APPL</string>
              <key>LSMinimumSystemVersion</key>
              <string>10.15</string>
              <key>NSHighResolutionCapable</key>
              <true/>
              <key>NSRequiresAquaSystemAppearance</key>
              <false/>
          </dict>
          </plist>
          PLISTEOF
          
          # Use macdeployqt to bundle Qt frameworks
          echo "Running macdeployqt..."
          MACDEPLOYQT_PATH="${{ github.workspace }}/Qt/Qt/${{ matrix.qt_version }}/clang_64/bin/macdeployqt"
          if [ ! -f "$MACDEPLOYQT_PATH" ]; then
            # Try alternative paths
            for path in "${{ github.workspace }}/Qt/${{ matrix.qt_version }}/clang_64/bin/macdeployqt" "${{ github.workspace }}/Qt/bin/macdeployqt" "$(which macdeployqt)"; do
              if [ -f "$path" ]; then
                MACDEPLOYQT_PATH="$path"
                break
              fi
            done
          fi
          
          if [ -f "$MACDEPLOYQT_PATH" ]; then
            echo "Using macdeployqt from: $MACDEPLOYQT_PATH"
            "$MACDEPLOYQT_PATH" deploy/ConvertRT.app -verbose=2
          else
            echo "Warning: macdeployqt not found, app may not be portable"
            echo "Searched paths but macdeployqt not available"
          fi
          
          # Create a DMG-ready folder
          mkdir -p deploy/dmg
          cp -R deploy/ConvertRT.app deploy/dmg/
          
          # Create a simple README for the DMG
          cat > deploy/dmg/README.txt << 'READMEEOF'
          ConvertRT - Word to HTML/RTF Converter
          
          To install:
          1. Drag ConvertRT.app to your Applications folder
          2. Double-click to run
          
          Configuration:
          - Config file is located inside the app bundle
          - Right-click app -> Show Package Contents -> Contents/Resources/config.ini
          
          System Requirements:
          - macOS 10.15 or later
          - Intel or Apple Silicon Mac
          READMEEOF
          
          # List contents for debugging
          echo "App bundle contents:"
          find deploy -name "*.app" -type d -exec ls -la {} \;
          find deploy -name "*.dylib" -type f | head -10

      - name: Upload macOS build
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: convertrt-macos-qt6-ready-to-use
          path: deploy/**