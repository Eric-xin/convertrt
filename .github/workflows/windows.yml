name: CMake-Windows

on:
  pull_request:
  push:

jobs:
  build:
    name: windows-${{ matrix.win_version }}-Qt-${{ matrix.qt_version }}-shared-${{ matrix.shared }}
    runs-on: windows-${{ matrix.win_version }}
    strategy:
      fail-fast: false
      matrix:
        win_version: [latest]
        qt_version: [6.5.*]
        shared: [ON]

    steps:
      - uses: actions/checkout@v3

      - uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt_version }}
          cache: true
          cache-key-prefix: ${{ runner.os }}-Qt-Cache-${{ matrix.qt_version }}
          dir: ${{ github.workspace }}/Qt
          host: windows
          arch: win64_msvc2019_64

      - name: Configure CMake
        run: cmake -DBUILD_SHARED_LIBS=${{ matrix.shared }} -DBUILD_EXAMPLES=OFF -DCMAKE_BUILD_TYPE=Release -B "${{ github.workspace }}/build"

      - name: Build
        run: cmake --build "${{ github.workspace }}/build" --config Release

      - name: Deploy Qt application
        run: |
          # Create deployment directory
          New-Item -ItemType Directory -Path "deploy" -Force
          
          # Copy the executable
          Copy-Item "build\Release\convertrt.exe" "deploy\"
          
          # Copy config file if it exists
          if (Test-Path "config.ini") {
            Copy-Item "config.ini" "deploy\"
          }
          
          # Use windeployqt to bundle Qt DLLs and dependencies
          $env:PATH += ";${{ github.workspace }}\Qt\Qt\${{ matrix.qt_version }}\msvc2019_64\bin"
          & windeployqt.exe --release --no-translations --no-system-d3d-compiler --no-opengl-sw deploy\convertrt.exe
          
          # List contents for debugging
          Get-ChildItem "deploy" -Recurse

      - name: Upload Windows build
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: convertrt-windows-qt${{ matrix.qt_version }}-ready-to-use
          path: deploy\**